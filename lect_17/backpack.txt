# ========== Задача о рюкзаке ===========

Максимальная масса = M
Каждый предмет имеет разную массу и ценность mi, vi
Задача унести как можно больше sum(v) если sum(m) <= M
N предметов


2^N — количество вариантов сочетаний предметов
Полнопереборное решение является одним из вариантов решения задачи
O(2^N)


== 1й вариант Жадный алгоритм ==
Берём самый дорогой из тех что могу взять, 
затем следующий самый дорогой, затем следующий самый дорогой 
пока не кончится место
Так можно не найти решение, но зато асимптотика полиноминальная
O(n^2) в худшем случае


== 2й вариант жадности ==
Нормировать ценность к массе:
v/m = ценность каждого предмета доллары/кг
можно получить более оптимальное решение
но можно прийти к варианту, когда осталось слишком много свободного места (не максимальная возможная общая ценность)


Задача является NP-полной — только полнопереборное решение гарантирует решение



# ========== Дискретная задача о рюкзаке ===========


F(k, i) - максимальная стоимость предметов, которые можно уложить в рюкзак ёмкости k
можно использовать только первые i предметов
N — общее число предметов
M — максимальная масса данного рюкзака
vi — ценность i предмета
mi — масса i предмета

k \ i |  0  |  1  |  2  | i-1 |  i  | i+1 |
0     |  0  |  0  |  0  |  0  |  0  |
1     |  0  |  0  |     |     | F1j |
2     |  0  |  0  |     |     | F2j |
3     |  0  |  0  |     |     | F3j |
4     |  0  |  0  |     |     | F4j |
…
m(1)-1|  0  |  0  |     |     |Fm-1j|
m(1)  |  0  |  v1 |     |     | Fmj |
m(1)+1|  0  |  v1 |     |     |Fm+1j|
…
m(N)  |  0  |  v1 |

F(k, i) = беру iй предмет : Vi + F(k-mi, i-1)
F(k, i) = не беру iй предмет : F(k, i-1)

F(k, i) = max((Vi)+F(k-mi, i-1), F(k, i-1) — рекуррентное решение, O(2^N)

Динамическое решение: O(N*M)
F = [[0]*(N+1) for i in range(M+1)]
for i in range(1, N+1):
    for k in range(1, M+1):
    if m[i] <= k:
        F[k][i] = max(v[i]+F[k-m[i]][i-1], F[k][i-1])
    else:
        F[k][i] = F[k][i-1]
        
return F[M][N]