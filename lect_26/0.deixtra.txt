# Алгоритм Дейкстры поиска кратчайшего пути

Если кратко — это обход графа в ширину с перезапуском

Требование: веса — неотрицательные числа
В зависимости от реализации, асимптотика бывает разная, но в лучшем случае: O(N^2)

Цель: поиск кратчайших путей от исходной вершины ко всем остальным.

1. Храним массив кратчайших расстояний до вершины от начала для каждой вершины
2. Для каждой вершины назначаем расстояние бесконечность, кроме исходной (у неё → 0)
3. Ставлю исходную вершину в очередь
4. Пока очередь не пуста, исследуем всех её соседей (включая тех, кого уже проверили)
5. Если вершину уже проверяли — попробовать улучшить кратчайшее расстояние до этой вершины

Восстановление пути:
1. Обходим соседей
2. Выбираем тех соседей, чей вес равен весу вершины минус вес ребра

Этот вариант и будет реализован в коде.

## Альтернативные варианты

I. Приоритезированная очередь — веса постоянно сортируются по их текущему весу и вершины сдвигаются в очереди.
Плюс: вершины никогда не повторяются, можно добиться O(N logN)
Минус: сложно программировать, долго вычислять, добиться хорошей асимптотики очень тяжело

II. Есть более человеческий, но более медленный в вычислении вариант алгоритма:
1. Ищем расстояния до соседей
2. Выбираем из всех известных вершин ту, чьё расстояние наименьшее, фиксируем её расстояние как окончательное
3. Исследуем дальше её соседей
Очередь не нужна, но много асимптотики тратится на сравнение вершин